{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/inject.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;AChFA,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAIzB;;;;GAIG;AACH,MAAM,CAAC,WAAW,GAAG,UAAU,GAAW,EAAE,MAAc;IACtD,IAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAChG,IAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;IACrF,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC5D,IAAM,GAAG,GAAG;QACR,QAAQ;QACR,QAAQ;KACX,CAAC;IAEF,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,WAAW,GAAG,UAAU,KAAa;IACxC,IAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,CAAC,QAAkB,CAAC;IAC5G,SAAoB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAtC,OAAO,UAAE,MAAM,QAAuB,CAAC;IAC9C,IAAM,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;IACpF,IAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,mBAAmB,CAAC,YAAY,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI;SAC/G,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IAChC,IAAM,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IAE1F,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IAExF,IAAM,GAAG,GAAG;QACR,OAAO;QACP,MAAM;QACN,SAAS;QACT,QAAQ;QACR,WAAW;KACd,CAAC;IACF,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,mBAAmB,GAAG,UAAU,IAAY;IAC/C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;IACzC,OAAO,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;AACtE,CAAC,CAAC","file":"inject.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/inject.ts\");\n","import { EVENT_TYPE, DATA_TYPE } from './constant/event';\n\nconsole.log('inject!!!');\n\ndeclare const window: any;\n\n/**\n * 获取 sheet 上 activeSheet 特定某个单元格数据\n * @param row 行\n * @param column 列\n */\nwindow.getCellData = function (row: number, column: number) {\n    const cellData = window.SpreadsheetApp.spreadsheet.activeSheet.data.rowData[row].values[column];\n    const cellView = window.SpreadsheetApp.view.canvas.tableView._cellViews[row][column];\n    console.log('getCellData', row, column, cellData, cellView);\n    const msg = {\n        cellData,\n        cellView,\n    };\n\n    return msg;\n};\n\nwindow.getDatabase = function (index: number) {\n    const anchorId = window.pad.editor.onDocument().getInlinePlugins().item(index).getAttributes().anchorId as string;\n    const [sheetId, viewId] = anchorId.split('_');\n    const sheetData = window.SpreadsheetApp.spreadsheet.getSheetBySheetId(sheetId).data;\n    const viewData = window.SpreadsheetApp.databaseViewManager.stageManager.getDatabaseViewByViewId(viewId).subView.view\n        .canvas.tableView.cellViews;\n    const viewOptions = window.SpreadsheetApp.spreadsheet.viewManager.getViewByViewId(viewId);\n\n    console.log('getDatabase', anchorId, sheetId, viewId, sheetData, viewData, viewOptions);\n\n    const msg = {\n        sheetId,\n        viewId,\n        sheetData,\n        viewData,\n        viewOptions,\n    };\n    return msg;\n};\n\nwindow.deserializeMutation = function (data: string) {\n    console.log('deserializeMutation', data);\n    return window.SpreadsheetApp.tools.deserializeMutation.toString();\n};\n"],"sourceRoot":""}